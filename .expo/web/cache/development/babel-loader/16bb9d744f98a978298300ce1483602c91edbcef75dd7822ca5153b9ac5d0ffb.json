{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport axios from \"axios\";\nimport chapathi from \"../assets/images/chapathi.png\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NutritionScreen() {\n  var _useState = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    result = _useState4[0],\n    setResult = _useState4[1];\n  var callApi = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var lines = items.split(\"\\\\n\").map(function (l) {\n        var parts = l.split(\":\");\n        return {\n          item: parts[0].trim(),\n          quantity: (parts[1] || \"1 unit\").trim()\n        };\n      });\n      try {\n        var res = yield axios.post(\"http://10.68.172.233:8080/nutrition\", {\n          foods: lines\n        });\n        setResult(res.data.meal_nutrition);\n      } catch (e) {\n        alert(\"API error: \" + e.message);\n      }\n    });\n    return function callApi() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: \"bold\"\n      },\n      children: \"Nutrition Analyzer\"\n    }), _jsx(Text, {\n      style: {\n        marginTop: \"12px\",\n        marginBottom: \"12px\"\n      },\n      children: \"Enter one item per line like: Chapathi: 4 pieces\"\n    }), _jsx(\"img\", {\n      src: chapathi,\n      style: {\n        maxWidth: \"372px\",\n        width: \"100%\",\n        boxShadow: \"0px 4px 21px -10px #054d7d\",\n        marginBottom: \"18px\",\n        borderRadius: \"38px\",\n        marginRight: \"auto\",\n        marginLeft: \"auto\"\n      },\n      alt: \"chapathi\"\n    }), _jsx(TextInput, {\n      value: items,\n      style: {\n        fontSize: 16,\n        alignSelf: \"center\",\n        marginBottom: \"22px\",\n        fontWeight: \"700\",\n        color: \"rgb(0,70,113)\"\n      },\n      onChangeText: setItems\n    }), _jsx(View, {\n      style: styles.buttonWrapper,\n      children: _jsx(Pressable, {\n        title: \"Analyze\",\n        onPress: callApi,\n        children: _jsx(LinearGradient, {\n          colors: [\"rgb(185, 227 ,255)\", \"rgb(149 ,203 ,236)\"],\n          start: {\n            x: 0,\n            y: 0\n          },\n          end: {\n            x: 1,\n            y: 1\n          },\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Generate 7-Day Plan\"\n          })\n        })\n      })\n    }), result && _jsxs(View, {\n      style: {\n        marginTop: 20\n      },\n      children: [_jsxs(Text, {\n        children: [\"Total Calories: \", result.total_calories]\n      }), _jsxs(Text, {\n        children: [\"Protein: \", result.macros.protein, \" g\"]\n      }), _jsxs(Text, {\n        children: [\"Carbs: \", result.macros.carbs, \" g\"]\n      }), _jsxs(Text, {\n        children: [\"Fat: \", result.macros.fat, \" g\"]\n      }), _jsx(View, {\n        style: {\n          height: 10\n        }\n      }), result.breakdown.map(function (b) {\n        return _jsxs(View, {\n          style: {\n            borderTopWidth: 1,\n            paddingTop: 8\n          },\n          children: [_jsx(Text, {\n            children: b.item\n          }), _jsxs(Text, {\n            children: [\"Calories: \", b.calories, \" | P: \", b.protein, \" | C: \", b.carbs, \" | F: \", b.fat]\n          })]\n        }, b.item);\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  buttonWrapper: {\n    marginTop: 22,\n    borderRadius: 6,\n    boxShadow: \"0px 0px 12px -4px rgb(32 158 239)\",\n    borderWidth: 1,\n    borderColor: \"rgb(152,214,255)\",\n    overflow: \"hidden\"\n  },\n  button: {\n    paddingVertical: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"rgb(5, 86, 139)\",\n    fontSize: 16,\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","ScrollView","Pressable","axios","chapathi","jsx","_jsx","jsxs","_jsxs","NutritionScreen","_useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","result","setResult","callApi","_ref","_asyncToGenerator","lines","split","map","l","parts","item","trim","quantity","res","post","foods","data","meal_nutrition","e","alert","message","apply","arguments","style","padding","children","fontSize","fontWeight","marginTop","marginBottom","src","maxWidth","width","boxShadow","borderRadius","marginRight","marginLeft","alt","value","alignSelf","color","onChangeText","styles","buttonWrapper","title","onPress","LinearGradient","colors","start","x","y","end","button","buttonText","total_calories","macros","protein","carbs","fat","height","breakdown","b","borderTopWidth","paddingTop","calories","create","borderWidth","borderColor","overflow","paddingVertical","alignItems","justifyContent"],"sources":["/Users/hariharan/ProjrctFile/diet_recommendation_project/frontend/src/screens/NutritionScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, StyleSheet, ScrollView, Pressable } from \"react-native\";\nimport axios from \"axios\";\nimport chapathi from '../assets/images/chapathi.png';\n\nexport default function NutritionScreen() {\n  const [items, setItems] = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\");\n  const [result, setResult] = useState(null);\n\n  const callApi = async () => {\n    const lines = items.split(\"\\\\n\").map(l => {\n      const parts = l.split(\":\");\n      return { item: parts[0].trim(), quantity: (parts[1] || \"1 unit\").trim() }\n    });\n    try {\n      const res = await axios.post(\"http://10.68.172.233:8080/nutrition\", { foods: lines });\n      setResult(res.data.meal_nutrition);\n    } catch (e) {\n      alert(\"API error: \" + e.message);\n    }\n  };\n\n  return (\n    <ScrollView style={{ padding: 20 }}>\n      <Text style={{ fontSize: 20, fontWeight: \"bold\" }} >Nutrition Analyzer</Text>\n      <Text style={{ marginTop: \"12px\", marginBottom: \"12px\" }} >Enter one item per line like: Chapathi: 4 pieces</Text>\n      <img src={chapathi} style={{ maxWidth: \"372px\", width: \"100%\", boxShadow: \"0px 4px 21px -10px #054d7d\", marginBottom: \"18px\", borderRadius: \"38px\", marginRight: \"auto\", marginLeft: \"auto\" }} alt=\"chapathi\" />\n      <TextInput value={items} style={{ fontSize: 16, alignSelf: \"center\", marginBottom: \"22px\", fontWeight: \"700\", color: \"rgb(0,70,113)\" }} onChangeText={setItems} />\n      <View style={styles.buttonWrapper}>\n        <Pressable title=\"Analyze\" onPress={callApi}>\n          <LinearGradient\n            colors={[\"rgb(185, 227 ,255)\", \"rgb(149 ,203 ,236)\"]}\n            start={{ x: 0, y: 0 }}\n            end={{ x: 1, y: 1 }}\n            style={styles.button}\n          >\n            <Text style={styles.buttonText}>Generate 7-Day Plan</Text>\n          </LinearGradient>\n        </Pressable>\n      </View>\n      {result && (\n        <View style={{ marginTop: 20 }}>\n          <Text>Total Calories: {result.total_calories}</Text>\n          <Text>Protein: {result.macros.protein} g</Text>\n          <Text>Carbs: {result.macros.carbs} g</Text>\n          <Text>Fat: {result.macros.fat} g</Text>\n          <View style={{ height: 10 }} />\n          {result.breakdown.map(b => (\n            <View key={b.item} style={{ borderTopWidth: 1, paddingTop: 8 }}>\n              <Text>{b.item}</Text>\n              <Text>Calories: {b.calories} | P: {b.protein} | C: {b.carbs} | F: {b.fat}</Text>\n            </View>\n          ))}\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonWrapper: {\n    marginTop: 22,\n    borderRadius: 6,\n    boxShadow: \"0px 0px 12px -4px rgb(32 158 239)\",\n    borderWidth: 1,\n    borderColor: \"rgb(152,214,255)\",\n    overflow: \"hidden\"\n  },\n  button: {\n    paddingVertical: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    color: \"rgb(5, 86, 139)\",\n    fontSize: 16,\n    fontWeight: \"600\",\n  },\n\n\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}