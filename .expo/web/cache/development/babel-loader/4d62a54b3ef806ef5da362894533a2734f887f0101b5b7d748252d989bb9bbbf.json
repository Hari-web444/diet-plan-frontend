{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport axios from \"axios\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport chapathi from \"../assets/images/chapathi.png\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NutritionScreen() {\n  var _useState = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    result = _useState4[0],\n    setResult = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPopup = _useState6[0],\n    setShowPopup = _useState6[1];\n  var opacity = useState(new Animated.Value(0))[0];\n  var callApi = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var lines = items.split(\"\\n\").map(function (l) {\n        var parts = l.split(\":\");\n        return {\n          item: parts[0].trim(),\n          quantity: (parts[1] || \"1 unit\").trim()\n        };\n      });\n      try {\n        var res = yield axios.post(\"http://10.68.172.233:8080/nutrition\", {\n          foods: lines\n        });\n        setResult(res.data.meal_nutrition);\n        setShowPopup(true);\n        Animated.timing(opacity, {\n          toValue: 1,\n          duration: 250,\n          useNativeDriver: true\n        }).start();\n      } catch (e) {\n        alert(\"API error: \" + e.message);\n      }\n    });\n    return function callApi() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var closePopup = function closePopup() {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true\n    }).start(function () {\n      return setShowPopup(false);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(ScrollView, {\n      style: {\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        children: \"Nutrition Analyzer\"\n      }), _jsx(Text, {\n        style: {\n          marginTop: 12,\n          marginBottom: 12\n        },\n        children: \"Enter one item per line like: Chapathi: 4 pieces\"\n      }), _jsx(Image, {\n        source: chapathi,\n        style: {\n          width: \"100%\",\n          height: 200,\n          borderRadius: 20,\n          marginBottom: 18\n        }\n      }), _jsx(TextInput, {\n        value: items,\n        onChangeText: setItems,\n        style: {\n          fontSize: 16,\n          fontWeight: \"700\",\n          color: \"rgb(0,70,113)\",\n          borderWidth: 1,\n          borderColor: \"#ccc\",\n          borderRadius: 10,\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 22,\n          textAlignVertical: \"top\"\n        }\n      }), _jsx(View, {\n        style: styles.buttonWrapper,\n        children: _jsx(Pressable, {\n          onPress: callApi,\n          children: _jsx(LinearGradient, {\n            colors: [\"rgb(5,79,128)\", \"rgb(0,56,91)\"],\n            start: {\n              x: 0,\n              y: 0\n            },\n            end: {\n              x: 1,\n              y: 1\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Analyze Nutrition\"\n            })\n          })\n        })\n      })]\n    }), showPopup && _jsx(Animated.View, {\n      style: [styles.popupOverlay, {\n        opacity: opacity\n      }],\n      children: _jsxs(View, {\n        style: styles.popupBox,\n        children: [_jsx(Text, {\n          style: styles.popupTitle,\n          children: \"Nutrition Breakdown\"\n        }), result ? _jsxs(ScrollView, {\n          style: {\n            maxHeight: 300\n          },\n          children: [_jsxs(View, {\n            style: {\n              gap: \"6px\"\n            },\n            children: [_jsxs(Text, {\n              children: [\"Total Calories: \", result.total_calories]\n            }), _jsxs(Text, {\n              children: [\"Protein: \", result.macros.protein, \" g\"]\n            }), _jsxs(Text, {\n              children: [\"Carbs: \", result.macros.carbs, \" g\"]\n            }), _jsxs(Text, {\n              children: [\"Fat: \", result.macros.fat, \" g\"]\n            })]\n          }), _jsx(View, {\n            style: {\n              height: 10\n            }\n          }), result.breakdown.map(function (b) {\n            return _jsxs(View, {\n              style: styles.itemRow,\n              children: [_jsx(Text, {\n                style: styles.itemTitle,\n                children: b.item\n              }), _jsxs(Text, {\n                style: styles.itemSub,\n                children: [\"Calories: \", b.calories, \" | P: \", b.protein, \" | C: \", b.carbs, \" | F:\", \" \", b.fat]\n              })]\n            }, b.item);\n          })]\n        }) : _jsx(Text, {\n          children: \"Loading...\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: closePopup,\n          children: _jsx(Text, {\n            style: styles.closeText,\n            children: \"Close\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  buttonWrapper: {\n    marginTop: 22,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: \"rgb(152,214,255)\",\n    overflow: \"hidden\"\n  },\n  button: {\n    paddingVertical: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"600\"\n  },\n  popupOverlay: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  popupBox: {\n    width: \"90%\",\n    backgroundColor: \"#fff\",\n    borderRadius: 12,\n    padding: 20\n  },\n  popupTitle: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    marginBottom: 10,\n    color: \"rgb(5,79,128)\"\n  },\n  itemRow: {\n    borderTopWidth: 1,\n    borderColor: \"#ddd\",\n    paddingVertical: 8,\n    gap: 6\n  },\n  itemTitle: {\n    fontWeight: \"600\",\n    fontSize: 15\n  },\n  itemSub: {\n    color: \"#555\"\n  },\n  closeButton: {\n    backgroundColor: \"rgb(5,79,128)\",\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 15\n  },\n  closeText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","ScrollView","Pressable","TouchableOpacity","StyleSheet","Animated","Image","axios","LinearGradient","chapathi","jsx","_jsx","jsxs","_jsxs","NutritionScreen","_useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","result","setResult","_useState5","_useState6","showPopup","setShowPopup","opacity","Value","callApi","_ref","_asyncToGenerator","lines","split","map","l","parts","item","trim","quantity","res","post","foods","data","meal_nutrition","timing","toValue","duration","useNativeDriver","start","e","alert","message","apply","arguments","closePopup","style","flex","children","padding","fontSize","fontWeight","marginTop","marginBottom","source","width","height","borderRadius","value","onChangeText","color","borderWidth","borderColor","textAlignVertical","styles","buttonWrapper","onPress","colors","x","y","end","button","buttonText","popupOverlay","popupBox","popupTitle","maxHeight","gap","total_calories","macros","protein","carbs","fat","breakdown","b","itemRow","itemTitle","itemSub","calories","closeButton","closeText","create","overflow","paddingVertical","alignItems","justifyContent","position","top","left","right","bottom","backgroundColor","borderTopWidth","textAlign"],"sources":["/Users/hariharan/ProjrctFile/diet_recommendation_project/frontend/src/screens/NutritionScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  TouchableOpacity,\n  StyleSheet,\n  Animated,\n  Image,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport chapathi from \"../assets/images/chapathi.png\";\n\nexport default function NutritionScreen() {\n  const [items, setItems] = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\");\n  const [result, setResult] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const opacity = useState(new Animated.Value(0))[0];\n\n  const callApi = async () => {\n    const lines = items.split(\"\\n\").map((l) => {\n      const parts = l.split(\":\");\n      return { item: parts[0].trim(), quantity: (parts[1] || \"1 unit\").trim() };\n    });\n\n    try {\n      const res = await axios.post(\"http://10.68.172.233:8080/nutrition\", {\n        foods: lines,\n      });\n      setResult(res.data.meal_nutrition);\n      setShowPopup(true);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: true,\n      }).start();\n    } catch (e) {\n      alert(\"API error: \" + e.message);\n    }\n  };\n\n  const closePopup = () => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(() => setShowPopup(false));\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <ScrollView style={{ padding: 20 }}>\n        <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Nutrition Analyzer</Text>\n        <Text style={{ marginTop: 12, marginBottom: 12 }}>\n          Enter one item per line like: Chapathi: 4 pieces\n        </Text>\n\n        <Image\n          source={chapathi}\n          style={{\n            width: \"100%\",\n            height: 200,\n            borderRadius: 20,\n            marginBottom: 18,\n          }}\n        />\n\n        <TextInput\n          value={items}\n          onChangeText={setItems}\n          style={{\n            fontSize: 16,\n            fontWeight: \"700\",\n            color: \"rgb(0,70,113)\",\n            borderWidth: 1,\n            borderColor: \"#ccc\",\n            borderRadius: 10,\n            width: \"100%\",\n            padding: 10,\n            marginBottom: 22,\n            textAlignVertical: \"top\",\n          }}\n          \n        />\n\n        <View style={styles.buttonWrapper}>\n          <Pressable onPress={callApi}>\n            <LinearGradient\n              colors={[\"rgb(5,79,128)\", \"rgb(0,56,91)\"]}\n              start={{ x: 0, y: 0 }}\n              end={{ x: 1, y: 1 }}\n              style={styles.button}\n            >\n              <Text style={styles.buttonText}>Analyze Nutrition</Text>\n            </LinearGradient>\n          </Pressable>\n        </View>\n      </ScrollView>\n\n      {/* ✅ Custom Popup */}\n      {showPopup && (\n        <Animated.View style={[styles.popupOverlay, { opacity }]}>\n          <View style={styles.popupBox}>\n            <Text style={styles.popupTitle}>Nutrition Breakdown</Text>\n\n            {result ? (\n              <ScrollView style={{ maxHeight: 300 }}>\n                <View style={{ gap: \"6px\" }} >\n                  <Text>Total Calories: {result.total_calories}</Text>\n                  <Text>Protein: {result.macros.protein} g</Text>\n                  <Text>Carbs: {result.macros.carbs} g</Text>\n                  <Text>Fat: {result.macros.fat} g</Text>\n                </View>\n                <View style={{ height: 10 }} />\n                {result.breakdown.map((b) => (\n                  <View key={b.item} style={styles.itemRow}>\n                    <Text style={styles.itemTitle}>{b.item}</Text>\n                    <Text style={styles.itemSub}>\n                      Calories: {b.calories} | P: {b.protein} | C: {b.carbs} | F:{\" \"}\n                      {b.fat}\n                    </Text>\n                  </View>\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Loading...</Text>\n            )}\n\n            <TouchableOpacity style={styles.closeButton} onPress={closePopup}>\n              <Text style={styles.closeText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonWrapper: {\n    marginTop: 22,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: \"rgb(152,214,255)\",\n    overflow: \"hidden\",\n  },\n  button: {\n    paddingVertical: 15,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"600\",\n  },\n  popupOverlay: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  popupBox: {\n    width: \"90%\",\n    backgroundColor: \"#fff\",\n    borderRadius: 12,\n    padding: 20,\n  },\n  popupTitle: {\n    fontSize: 18,\n    fontWeight: \"700\",\n    marginBottom: 10,\n    color: \"rgb(5,79,128)\",\n  },\n  itemRow: {\n    borderTopWidth: 1,\n    borderColor: \"#ddd\",\n    paddingVertical: 8,\n    gap: 6\n  },\n  itemTitle: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  itemSub: {\n    color: \"#555\",\n  },\n  closeButton: {\n    backgroundColor: \"rgb(5,79,128)\",\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 15,\n  },\n  closeText: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    fontWeight: \"600\",\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAYxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,QAAQ;AAAsC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErD,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,IAAAC,SAAA,GAA0BlB,QAAQ,CAAC,0CAA0C,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvEG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA4BvB,QAAQ,CAAC,IAAI,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAAkC3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAMG,OAAO,GAAG/B,QAAQ,CAAC,IAAIQ,QAAQ,CAACwB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAElD,IAAMC,OAAO;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC1B,IAAMC,KAAK,GAAGf,KAAK,CAACgB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC,EAAK;QACzC,IAAMC,KAAK,GAAGD,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;QAC1B,OAAO;UAAEI,IAAI,EAAED,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;UAAEC,QAAQ,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAEE,IAAI,CAAC;QAAE,CAAC;MAC3E,CAAC,CAAC;MAEF,IAAI;QACF,IAAME,GAAG,SAASlC,KAAK,CAACmC,IAAI,CAAC,qCAAqC,EAAE;UAClEC,KAAK,EAAEV;QACT,CAAC,CAAC;QACFV,SAAS,CAACkB,GAAG,CAACG,IAAI,CAACC,cAAc,CAAC;QAClClB,YAAY,CAAC,IAAI,CAAC;QAClBtB,QAAQ,CAACyC,MAAM,CAAClB,OAAO,EAAE;UACvBmB,OAAO,EAAE,CAAC;UACVC,QAAQ,EAAE,GAAG;UACbC,eAAe,EAAE;QACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,KAAK,CAAC,aAAa,GAAGD,CAAC,CAACE,OAAO,CAAC;MAClC;IACF,CAAC;IAAA,gBApBKvB,OAAOA,CAAA;MAAA,OAAAC,IAAA,CAAAuB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAoBZ;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBnD,QAAQ,CAACyC,MAAM,CAAClB,OAAO,EAAE;MACvBmB,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC;MAAA,OAAMvB,YAAY,CAAC,KAAK,CAAC;IAAA,EAAC;EACrC,CAAC;EAED,OACEd,KAAA,CAACf,IAAI;IAAC2D,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACvB9C,KAAA,CAACZ,UAAU;MAACwD,KAAK,EAAE;QAAEG,OAAO,EAAE;MAAG,CAAE;MAAAD,QAAA,GACjChD,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAE;UAAEI,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAH,QAAA,EAAC;MAAkB,CAAM,CAAC,EAC5EhD,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAE;UAAEM,SAAS,EAAE,EAAE;UAAEC,YAAY,EAAE;QAAG,CAAE;QAAAL,QAAA,EAAC;MAElD,CAAM,CAAC,EAEPhD,IAAA,CAACL,KAAK;QACJ2D,MAAM,EAAExD,QAAS;QACjBgD,KAAK,EAAE;UACLS,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,GAAG;UACXC,YAAY,EAAE,EAAE;UAChBJ,YAAY,EAAE;QAChB;MAAE,CACH,CAAC,EAEFrD,IAAA,CAACX,SAAS;QACRqE,KAAK,EAAEnD,KAAM;QACboD,YAAY,EAAEnD,QAAS;QACvBsC,KAAK,EAAE;UACLI,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,KAAK;UACjBS,KAAK,EAAE,eAAe;UACtBC,WAAW,EAAE,CAAC;UACdC,WAAW,EAAE,MAAM;UACnBL,YAAY,EAAE,EAAE;UAChBF,KAAK,EAAE,MAAM;UACbN,OAAO,EAAE,EAAE;UACXI,YAAY,EAAE,EAAE;UAChBU,iBAAiB,EAAE;QACrB;MAAE,CAEH,CAAC,EAEF/D,IAAA,CAACb,IAAI;QAAC2D,KAAK,EAAEkB,MAAM,CAACC,aAAc;QAAAjB,QAAA,EAChChD,IAAA,CAACT,SAAS;UAAC2E,OAAO,EAAE/C,OAAQ;UAAA6B,QAAA,EAC1BhD,IAAA,CAACH,cAAc;YACbsE,MAAM,EAAE,CAAC,eAAe,EAAE,cAAc,CAAE;YAC1C5B,KAAK,EAAE;cAAE6B,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAE,CAAE;YACtBC,GAAG,EAAE;cAAEF,CAAC,EAAE,CAAC;cAAEC,CAAC,EAAE;YAAE,CAAE;YACpBvB,KAAK,EAAEkB,MAAM,CAACO,MAAO;YAAAvB,QAAA,EAErBhD,IAAA,CAACZ,IAAI;cAAC0D,KAAK,EAAEkB,MAAM,CAACQ,UAAW;cAAAxB,QAAA,EAAC;YAAiB,CAAM;UAAC,CAC1C;QAAC,CACR;MAAC,CACR,CAAC;IAAA,CACG,CAAC,EAGZjC,SAAS,IACRf,IAAA,CAACN,QAAQ,CAACP,IAAI;MAAC2D,KAAK,EAAE,CAACkB,MAAM,CAACS,YAAY,EAAE;QAAExD,OAAO,EAAPA;MAAQ,CAAC,CAAE;MAAA+B,QAAA,EACvD9C,KAAA,CAACf,IAAI;QAAC2D,KAAK,EAAEkB,MAAM,CAACU,QAAS;QAAA1B,QAAA,GAC3BhD,IAAA,CAACZ,IAAI;UAAC0D,KAAK,EAAEkB,MAAM,CAACW,UAAW;UAAA3B,QAAA,EAAC;QAAmB,CAAM,CAAC,EAEzDrC,MAAM,GACLT,KAAA,CAACZ,UAAU;UAACwD,KAAK,EAAE;YAAE8B,SAAS,EAAE;UAAI,CAAE;UAAA5B,QAAA,GACpC9C,KAAA,CAACf,IAAI;YAAC2D,KAAK,EAAE;cAAE+B,GAAG,EAAE;YAAM,CAAE;YAAA7B,QAAA,GAC1B9C,KAAA,CAACd,IAAI;cAAA4D,QAAA,GAAC,kBAAgB,EAACrC,MAAM,CAACmE,cAAc;YAAA,CAAO,CAAC,EACpD5E,KAAA,CAACd,IAAI;cAAA4D,QAAA,GAAC,WAAS,EAACrC,MAAM,CAACoE,MAAM,CAACC,OAAO,EAAC,IAAE;YAAA,CAAM,CAAC,EAC/C9E,KAAA,CAACd,IAAI;cAAA4D,QAAA,GAAC,SAAO,EAACrC,MAAM,CAACoE,MAAM,CAACE,KAAK,EAAC,IAAE;YAAA,CAAM,CAAC,EAC3C/E,KAAA,CAACd,IAAI;cAAA4D,QAAA,GAAC,OAAK,EAACrC,MAAM,CAACoE,MAAM,CAACG,GAAG,EAAC,IAAE;YAAA,CAAM,CAAC;UAAA,CACnC,CAAC,EACPlF,IAAA,CAACb,IAAI;YAAC2D,KAAK,EAAE;cAAEU,MAAM,EAAE;YAAG;UAAE,CAAE,CAAC,EAC9B7C,MAAM,CAACwE,SAAS,CAAC3D,GAAG,CAAC,UAAC4D,CAAC;YAAA,OACtBlF,KAAA,CAACf,IAAI;cAAc2D,KAAK,EAAEkB,MAAM,CAACqB,OAAQ;cAAArC,QAAA,GACvChD,IAAA,CAACZ,IAAI;gBAAC0D,KAAK,EAAEkB,MAAM,CAACsB,SAAU;gBAAAtC,QAAA,EAAEoC,CAAC,CAACzD;cAAI,CAAO,CAAC,EAC9CzB,KAAA,CAACd,IAAI;gBAAC0D,KAAK,EAAEkB,MAAM,CAACuB,OAAQ;gBAAAvC,QAAA,GAAC,YACjB,EAACoC,CAAC,CAACI,QAAQ,EAAC,QAAM,EAACJ,CAAC,CAACJ,OAAO,EAAC,QAAM,EAACI,CAAC,CAACH,KAAK,EAAC,OAAK,EAAC,GAAG,EAC9DG,CAAC,CAACF,GAAG;cAAA,CACF,CAAC;YAAA,GALEE,CAAC,CAACzD,IAMP,CAAC;UAAA,CACR,CAAC;QAAA,CACQ,CAAC,GAEb3B,IAAA,CAACZ,IAAI;UAAA4D,QAAA,EAAC;QAAU,CAAM,CACvB,EAEDhD,IAAA,CAACR,gBAAgB;UAACsD,KAAK,EAAEkB,MAAM,CAACyB,WAAY;UAACvB,OAAO,EAAErB,UAAW;UAAAG,QAAA,EAC/DhD,IAAA,CAACZ,IAAI;YAAC0D,KAAK,EAAEkB,MAAM,CAAC0B,SAAU;YAAA1C,QAAA,EAAC;UAAK,CAAM;QAAC,CAC3B,CAAC;MAAA,CACf;IAAC,CACM,CAChB;EAAA,CACG,CAAC;AAEX;AAEA,IAAMgB,MAAM,GAAGvE,UAAU,CAACkG,MAAM,CAAC;EAC/B1B,aAAa,EAAE;IACbb,SAAS,EAAE,EAAE;IACbK,YAAY,EAAE,CAAC;IACfI,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,kBAAkB;IAC/B8B,QAAQ,EAAE;EACZ,CAAC;EACDrB,MAAM,EAAE;IACNsB,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDvB,UAAU,EAAE;IACVZ,KAAK,EAAE,MAAM;IACbV,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDsB,YAAY,EAAE;IACZuB,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAE,iBAAiB;IAClCN,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpB7C,OAAO,EAAE;EACX,CAAC;EACDyB,QAAQ,EAAE;IACRnB,KAAK,EAAE,KAAK;IACZ8C,eAAe,EAAE,MAAM;IACvB5C,YAAY,EAAE,EAAE;IAChBR,OAAO,EAAE;EACX,CAAC;EACD0B,UAAU,EAAE;IACVzB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBE,YAAY,EAAE,EAAE;IAChBO,KAAK,EAAE;EACT,CAAC;EACDyB,OAAO,EAAE;IACPiB,cAAc,EAAE,CAAC;IACjBxC,WAAW,EAAE,MAAM;IACnB+B,eAAe,EAAE,CAAC;IAClBhB,GAAG,EAAE;EACP,CAAC;EACDS,SAAS,EAAE;IACTnC,UAAU,EAAE,KAAK;IACjBD,QAAQ,EAAE;EACZ,CAAC;EACDqC,OAAO,EAAE;IACP3B,KAAK,EAAE;EACT,CAAC;EACD6B,WAAW,EAAE;IACXY,eAAe,EAAE,eAAe;IAChCR,eAAe,EAAE,EAAE;IACnBpC,YAAY,EAAE,CAAC;IACfL,SAAS,EAAE;EACb,CAAC;EACDsC,SAAS,EAAE;IACT9B,KAAK,EAAE,MAAM;IACb2C,SAAS,EAAE,QAAQ;IACnBpD,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}