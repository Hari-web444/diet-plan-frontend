{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from \"axios\";\nimport chapathi from \"../assets/images/chapathi.png\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NutritionScreen() {\n  var _useState = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    items = _useState2[0],\n    setItems = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    result = _useState4[0],\n    setResult = _useState4[1];\n  var callApi = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var lines = items.split(\"\\\\n\").map(function (l) {\n        var parts = l.split(\":\");\n        return {\n          item: parts[0].trim(),\n          quantity: (parts[1] || \"1 unit\").trim()\n        };\n      });\n      try {\n        var res = yield axios.post(\"http://10.68.172.233:8080/nutrition\", {\n          foods: lines\n        });\n        setResult(res.data.meal_nutrition);\n      } catch (e) {\n        alert(\"API error: \" + e.message);\n      }\n    });\n    return function callApi() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: \"bold\"\n      },\n      children: \"Nutrition Analyzer\"\n    }), _jsx(Text, {\n      style: {\n        marginTop: \"12px\",\n        marginBottom: \"12px\"\n      },\n      children: \"Enter one item per line like: Chapathi: 4 pieces\"\n    }), _jsx(\"img\", {\n      src: chapathi,\n      style: {\n        maxWidth: \"372px\",\n        width: \"100%\",\n        boxShadow: \"0px 4px 21px -10px #054d7d\",\n        marginBottom: \"22px\",\n        borderRadius: \"38px\",\n        marginRight: \"auto\",\n        marginLeft: \"auto\"\n      },\n      alt: \"chapathi\"\n    }), _jsx(TextInput, {\n      value: items,\n      style: {\n        fontSize: 16,\n        fontWeight: \"700\"\n      },\n      onChangeText: setItems\n    }), _jsx(Button, {\n      title: \"Analyze\",\n      onPress: callApi\n    }), result && _jsxs(View, {\n      style: {\n        marginTop: 20\n      },\n      children: [_jsxs(Text, {\n        children: [\"Total Calories: \", result.total_calories]\n      }), _jsxs(Text, {\n        children: [\"Protein: \", result.macros.protein, \" g\"]\n      }), _jsxs(Text, {\n        children: [\"Carbs: \", result.macros.carbs, \" g\"]\n      }), _jsxs(Text, {\n        children: [\"Fat: \", result.macros.fat, \" g\"]\n      }), _jsx(View, {\n        style: {\n          height: 10\n        }\n      }), result.breakdown.map(function (b) {\n        return _jsxs(View, {\n          style: {\n            borderTopWidth: 1,\n            paddingTop: 8\n          },\n          children: [_jsx(Text, {\n            children: b.item\n          }), _jsxs(Text, {\n            children: [\"Calories: \", b.calories, \" | P: \", b.protein, \" | C: \", b.carbs, \" | F: \", b.fat]\n          })]\n        }, b.item);\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","ScrollView","axios","chapathi","jsx","_jsx","jsxs","_jsxs","NutritionScreen","_useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","result","setResult","callApi","_ref","_asyncToGenerator","lines","split","map","l","parts","item","trim","quantity","res","post","foods","data","meal_nutrition","e","alert","message","apply","arguments","style","padding","children","fontSize","fontWeight","marginTop","marginBottom","src","maxWidth","width","boxShadow","borderRadius","marginRight","marginLeft","alt","value","onChangeText","title","onPress","total_calories","macros","protein","carbs","fat","height","breakdown","b","borderTopWidth","paddingTop","calories"],"sources":["/Users/hariharan/ProjrctFile/diet_recommendation_project/frontend/src/screens/NutritionScreen.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { View, Text, TextInput, Button, ScrollView } from \"react-native\";\nimport axios from \"axios\";\nimport chapathi from '../assets/images/chapathi.png';\n\nexport default function NutritionScreen(){\n  const [items, setItems] = useState(\"Chapathi: 4 pieces\\nPotato Kuruma: 200 g\");\n  const [result, setResult] = useState(null);\n\n  const callApi = async ()=>{\n    const lines = items.split(\"\\\\n\").map(l=>{\n      const parts = l.split(\":\");\n      return {item: parts[0].trim(), quantity: (parts[1]||\"1 unit\").trim()}\n    });\n    try{\n      const res = await axios.post(\"http://10.68.172.233:8080/nutrition\", {foods: lines});\n      setResult(res.data.meal_nutrition);\n    }catch(e){\n      alert(\"API error: \" + e.message);\n    }\n  };\n\n  return (\n    <ScrollView style={{padding:20}}>\n      <Text style={{fontSize:20, fontWeight:\"bold\"}} >Nutrition Analyzer</Text>\n      <Text style={{marginTop: \"12px\", marginBottom: \"12px\" }} >Enter one item per line like: Chapathi: 4 pieces</Text>\n      <img src={chapathi} style={{ maxWidth: \"372px\", width: \"100%\", boxShadow: \"0px 4px 21px -10px #054d7d\", marginBottom: \"22px\" , borderRadius: \"38px\"  , marginRight: \"auto\", marginLeft: \"auto\" }} alt=\"chapathi\" />\n      <TextInput value={items}  style={{ fontSize: 16, fontWeight: \"700\" }} onChangeText={setItems} />\n      <Button title=\"Analyze\" onPress={callApi} />\n      {result && (\n        <View style={{marginTop:20}}>\n          <Text>Total Calories: {result.total_calories}</Text>\n          <Text>Protein: {result.macros.protein} g</Text>\n          <Text>Carbs: {result.macros.carbs} g</Text>\n          <Text>Fat: {result.macros.fat} g</Text>\n          <View style={{height:10}} />\n          {result.breakdown.map(b=>(\n            <View key={b.item} style={{borderTopWidth:1, paddingTop:8}}>\n              <Text>{b.item}</Text>\n              <Text>Calories: {b.calories} | P: {b.protein} | C: {b.carbs} | F: {b.fat}</Text>\n            </View>\n          ))}\n        </View>\n      )}\n    </ScrollView>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}